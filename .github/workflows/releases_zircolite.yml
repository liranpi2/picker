name: zircolite

on:
  workflow_dispatch:
    inputs:
          logLevel:
            description: 'Log level'     
            required: true
            default: 'warning'
          tags:
            description: 'build scenario tag'  
            
permissions: write-all

jobs:
  job1:
    runs-on: ubuntu-latest
    
    steps:
    - id: set-matrix
      run: |
        zircolite_1="\"repo\":\"wagga40\/Zircolite\",\"content-type\":\"application\/octet-stream\",\"file\":\"zircolite_win10_nuitka_embedded.exe\",\"tag\":\"curl -s https:\/\/api.github.com\/repos\/wagga40\/Zircolite\/releases\/latest | jq .tag_name  | sed 's\/\\\"\/\/g'\""
        zircolite_2="\"repo\":\"wagga40\/Zircolite\",\"content-type\":\"application\/octet-stream\",\"file\":\"zircolite_win7_embedded.exe\",\"tag\":\"curl -s https:\/\/api.github.com\/repos\/wagga40\/Zircolite\/releases\/latest | jq .tag_name  | sed 's\/\\\"\/\/g'\""
        str="{\"include\":[{$zircolite_1},{$zircolite_2}]}"
        echo "::set-output name=matrix::$str"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
  
  job2:
    needs: job1
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.job1.outputs.matrix)}}
    steps:
    - name: checkout current
      uses: actions/checkout@v2
        
    - name: request github api
      id: api
      run: |
            echo ::set-output name=tagname::`${{ matrix.tag }}`
    - name: echo
      run: |
          echo ${{ steps.api.outputs.tagname}}
   
    - name: download release
      id: get_release
      uses: robinraju/release-downloader@v1.3
      with:
        repository: "${{ matrix.repo }}"
        latest: true
        fileName: "${{ matrix.file }}"
        token: ${{ secrets.GITHUB_TOKEN }}
          
    - name: create custom release
      uses: actions/create-release@v1
      id: create-new-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.api.outputs.tagname}}
        release_name: ${{ matrix.file }}
      
    - name: upload release   
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-new-release.outputs.upload_url }}
        asset_path: ${{ matrix.file }}
        asset_name: ${{ matrix.file }}
        asset_content_type: ${{ matrix.content-type }}
    
