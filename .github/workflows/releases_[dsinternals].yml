name: dsinternal

on:
  schedule:
    - cron:  '*/15 * * * *'
            
permissions: write-all

jobs:
  job1:
    runs-on: ubuntu-latest
    
    steps:
    - id: set-matrix
      run: |
        dsinternal="\"repo\":\"MichaelGrafnetter\/DSInternals\",\"content-type\":\"application\/zip\",\"file\":\"curl -s https:\/\/api.github.com\/repos\/MichaelGrafnetter\/DSInternals\/releases\/latest | jq .assets[0].name  | sed 's\/\\\"\/\/g'\",\"tag\":\"curl -s https:\/\/api.github.com\/repos\/MichaelGrafnetter\/DSInternals\/releases\/latest | jq .tag_name  | sed 's\/\\\"\/\/g'\",\"asset\": \"repo1.zip\""
        str="{\"include\":[{$dsinternal}]}"
        echo "::set-output name=matrix::$str"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
  
  job2:
    needs: job1
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.job1.outputs.matrix)}}
    steps:
    - name: checkout current
      uses: actions/checkout@v2
        
    - name: request github api
      id: api
      run: |
            echo ::set-output name=filename::`${{ matrix.file }}`
            echo ::set-output name=tagname::`${{ matrix.tag }}`
    - name: echo
      run: |
          echo ${{ steps.api.outputs.filename}}
          echo ${{ steps.api.outputs.tagname}}

    - name: download release
      id: get_release
      uses: robinraju/release-downloader@v1.3
      with:
        repository: "${{ matrix.repo }}"
        latest: true
        zipBall: true
        fileName: ${{ steps.api.outputs.filename}}
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: create custom release
      uses: actions/create-release@v1
      id: create-new-release
      with:
        tag_name: ${{ steps.api.outputs.tagname}}
        release_name: ${{ steps.api.outputs.filename}}
        draft: false
        prerelease: false
        body: dsinternal ${{ matrix.tag }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: upload release   
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-new-release.outputs.upload_url }}
        asset_path: ${{ steps.api.outputs.filename}}
        asset_name: ${{ matrix.asset }}
        asset_content_type: ${{ matrix.content-type }}
  
